import telebot
import config
import random
import datetime

from telebot import types

bot = telebot.TeleBot(config.TOKEN)

gifts = ['–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –ø–ª–µ–¥ —Å —Ä—É–∫–∞–≤–∞–º–∏', '3D-—Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏ –Ω–∞ —Å—Ç–µ–Ω—É', '–°–Ω–µ–∂–Ω—ã–π –±–ª–∞—Å—Ç–µ—Ä', 
		'–ö–æ—Ä–∑–∏–Ω–∫–∞ —Ñ—Ä—É–∫—Ç–æ–≤', '–®–∞–ø–∫–∞ —É—à–∞–Ω–∫–∞', '–º–Ω–æ–≥–æ—Ä–∞–∑–æ–≤—ã–µ –∫—É–±–∏–∫–∏ –ª—å–¥–∞ –¥–ª—è –Ω–∞–ø–∏—Ç–∫–æ–≤', 
		'–¢–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞', 'Power bank –∫–∞–º–µ–Ω—å', '3D-—Ä—É—á–∫–∞', 
		'—Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–∫–µ—Ä', '–ö—Ä—É–∂–∫–∞-–º–µ—à–∞–ª–∫–∞', '–ë–∏–ª–µ—Ç—ã –Ω–∞ –∫–∞—Ç–æ–∫', 
		'–ú–µ—Ö–æ–≤—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏', '–°–∫–µ—Ç—á–±—É–∫', '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã', 
		'–£—Ç–æ—á–∫–∞ –¥–ª—è –≤–∞–Ω–Ω—ã', '–ù–µ–±–µ—Å–Ω—ã–π —Ñ–æ–Ω–∞—Ä–∏–∫ "–ù–æ–≤–æ–≥–æ–¥–Ω–∏–π"', '–ì–∏—Ä–ª—è–¥–Ω–∞', 
		'–ù–∞—Å—Ç–æ–ª—å–Ω—ã–π –±–∏–æ–∫–∞–º–∏–Ω', '–ü–ª–µ–¥ —Ñ–æ—Ç–æ-–∫–æ–ª–ª–∞–∂', '–§–µ–π–µ—Ä–≤–µ—Ä–∫–∏']

@bot.message_handler(commands=['start'])
def welcome(message):
	sti = open('static/hi.webp', 'rb')
	bot.send_sticker(message.chat.id, sti)

	# keyboard
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	item1 = types.KeyboardButton("üéÅ–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫!üéÅ")

	markup.add(item1)

	now = datetime.datetime.today()
	NY = datetime.datetime(2021,1,1)
	d = NY-now
	mm, ss = divmod(d.seconds, 60)
	hh, mm = divmod(mm, 60)

	bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n–Ø - <b>{1.first_name}</b> \n–û–ª–µ–Ω—å-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∫–∏–Ω–µ—Ç –∏–¥–µ–∏ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –¥—Ä—É–∑–µ–π –∏ —Ä–æ–¥–Ω—ã—Ö.\nüëá–°–∫–æ—Ä–µ–µ –∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µüëá\n–í–µ–¥—å –¥–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞ –æ—Å—Ç–∞–ª–æ—Å—å –≤—Å–µ–≥–æ {2} –¥–Ω–µ–π {3} —á–∞—Å–∞ {4} –º–∏–Ω.".format(message.from_user, bot.get_me(), d.days, hh, mm), 
		parse_mode='html', reply_markup=markup)

@bot.message_handler(content_types=['text'])
def choosing_gift(message):
	if message.chat.type == 'private':
		if message.text == 'üéÅ–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫!üéÅ':

			markup = types.InlineKeyboardMarkup(row_width=2)
			item1 = types.InlineKeyboardButton('–ö–ª–∞—Å—Å! üëç', callback_data='good')
			item2 = types.InlineKeyboardButton('–ù–µ –æ—á–µ–Ω—å. üëé', callback_data='bad')

			markup.add(item1, item2)

			bot.send_message(message.chat.id, '–õ–æ–≤–∏ –∏–¥–µ—é –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–≥–æ –ø–æ–¥–∞—Ä–∫–∞! \n{}'.format(gifts[random.randint(0, len(gifts)-1)]),
				reply_markup=markup)
		else:
			bot.send_message(message.chat.id, '–°–∫–æ—Ä–µ–µ –∂–º–∏ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏–¥–µ—é –∫–ª–∞—Å—Å–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	try:
		if call.message:
			if call.data == 'good':
				bot.send_message(call.message.chat.id, '–†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å —Ç–µ–±–µ!')
			elif call.data == 'bad':
				bot.send_message(call.message.chat.id, '–ß—Ç–æ –∂, –ø–æ–ø—Ä–æ–±—É–π –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–∏–µ –∏–¥–µ–∏.\n–ö–Ω–æ–ø–∫–∞ —Å –ø–æ–¥–∞—Ä–∫–∞–º–∏ –≤—Å–µ –µ—â–µ –Ω–∞ –º–µ—Å—Ç–µ')

			# remove inline buttons
			#bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–õ–æ–≤–∏ –∏–¥–µ—é –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–≥–æ –ø–æ–¥–∞—Ä–∫–∞!", reply_markup=None)

	except Exception as e:
		print(repr(e))

# RUN
bot.polling(none_stop=True)